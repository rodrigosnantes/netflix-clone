{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\netflix-clone-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport TmdbApi from './api/TmdbApi';\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMove from \"./components/FeaturedMove\";\nimport Header from './components/Header';\nimport './App.css';\nexport default function App() {\n  _s();\n\n  const [moveList, setMoveList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(() => {\n    (async () => {\n      const resultMoveList = await loadAll();\n      setMoveList(resultMoveList);\n      const resultFeaturedMove = await randomFeatured(resultMoveList);\n      setFeaturedData(await getAdditionalMoveInfo(resultFeaturedMove));\n    })();\n  }, []);\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n\n  const loadAll = async () => {\n    return await TmdbApi.getHomeList();\n  };\n\n  const randomFeatured = async list => {\n    const originals = list.filter(move => move.slug === 'originals');\n    const randomItem = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n    return originals[0].items.results[randomItem];\n  };\n\n  const getAdditionalMoveInfo = async move => {\n    return TmdbApi.getMoveInfo(move.id, 'tv');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      blackHeader: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMove, {\n      featuredData: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: moveList.map(item => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Projeto curso de estudo feito por min. Direitos de imagens NexFlix Dados pegos site Tmdb.org\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), moveList.length <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/Netflix_LoadTime-scaled.gif\",\n        alt: \"carregando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"mKT6nanfIASbURQd+5hNFbKfT2M=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/DEV/netflix-clone-main/src/App.js"],"names":["React","useEffect","useState","TmdbApi","MovieRow","FeaturedMove","Header","App","moveList","setMoveList","featuredData","setFeaturedData","blackHeader","setBlackHeader","resultMoveList","loadAll","resultFeaturedMove","randomFeatured","getAdditionalMoveInfo","scrollListener","window","scrollY","addEventListener","removeEventListener","getHomeList","list","originals","filter","move","slug","randomItem","Math","floor","random","items","results","length","getMoveInfo","id","map","item","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,WAAP;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMa,cAAc,GAAG,MAAMC,OAAO,EAApC;AACAN,MAAAA,WAAW,CAACK,cAAD,CAAX;AACA,YAAME,kBAAkB,GAAG,MAAMC,cAAc,CAACH,cAAD,CAA/C;AACCH,MAAAA,eAAe,CAAC,MAAMO,qBAAqB,CAACF,kBAAD,CAA5B,CAAf;AACJ,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,cAAc,GAAG,MAAM;AACzB,UAAGC,MAAM,CAACC,OAAP,GAAiB,EAApB,EAAwB;AACpBR,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAFD,MAEO;AACHA,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,KAND;;AAQAO,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,cAAlC;AACA,WAAM,MAAM;AACRC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,cAArC;AACH,KAFD;AAGH,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMJ,OAAO,GAAG,YAAY;AACxB,WAAO,MAAMZ,OAAO,CAACqB,WAAR,EAAb;AACH,GAFD;;AAIA,QAAMP,cAAc,GAAG,MAAOQ,IAAP,IAAgB;AACnC,UAAMC,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,WAAlC,CAAlB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BC,MAA3B,GAAoC,CAArD,CAAX,CAAnB;AACA,WAAOV,SAAS,CAAC,CAAD,CAAT,CAAaQ,KAAb,CAAmBC,OAAnB,CAA2BL,UAA3B,CAAP;AACH,GAJD;;AAOA,QAAMZ,qBAAqB,GAAG,MAAOU,IAAP,IAAgB;AAC1C,WAAOzB,OAAO,CAACkC,WAAR,CAAoBT,IAAI,CAACU,EAAzB,EAA6B,IAA7B,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BAEK,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE1B;AAArB;AAAA;AAAA;AAAA;AAAA,YAFL,EAIKF,YAAY,iBACT,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,YALR,eAQI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,gBACGF,QAAQ,CAAC+B,GAAT,CAAcC,IAAD,iBACV,QAAC,QAAD;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACC,KAFhB;AAGI,QAAA,KAAK,EAAED,IAAI,CAACN;AAHhB,SACSM,IAAI,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA,YARJ,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAwBIjC,QAAQ,CAAC4B,MAAT,IAAmB,CAAnB,iBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,6FAAT;AAAuG,QAAA,GAAG,EAAC;AAA3G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GA5EuB7B,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport {useEffect, useState} from \"react\";\n\nimport TmdbApi from './api/TmdbApi'\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMove from \"./components/FeaturedMove\";\nimport Header from './components/Header';\n\nimport './App.css'\n\nexport default function App()  {\n    const [moveList, setMoveList] = useState([]);\n    const [featuredData, setFeaturedData] = useState(null);\n    const [blackHeader, setBlackHeader] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            const resultMoveList = await loadAll();\n            setMoveList(resultMoveList);\n            const resultFeaturedMove = await randomFeatured(resultMoveList);\n             setFeaturedData(await getAdditionalMoveInfo(resultFeaturedMove));\n        })();\n    }, [])\n\n    useEffect(() => {\n        const scrollListener = () => {\n            if(window.scrollY > 10) {\n                setBlackHeader(true)\n            } else {\n                setBlackHeader(false)\n            }\n        }\n\n        window.addEventListener('scroll', scrollListener);\n        return() => {\n            window.removeEventListener('scroll', scrollListener)\n        }\n    }, [])\n\n    const loadAll = async () => {\n        return await TmdbApi.getHomeList();\n    }\n\n    const randomFeatured = async (list) => {\n        const originals = list.filter(move => move.slug === 'originals');\n        const randomItem = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n        return originals[0].items.results[randomItem];\n    }\n\n\n    const getAdditionalMoveInfo = async (move) => {\n        return TmdbApi.getMoveInfo(move.id, 'tv')\n    }\n\n    return (\n        <div className='pages'>\n          \n             <Header blackHeader={blackHeader} />\n\n            {featuredData &&\n                <FeaturedMove featuredData={featuredData} />\n            }\n\n            <section className='lists'>\n              {moveList.map((item) => (\n                  <MovieRow\n                      key={item.title}\n                      title={item.title}\n                      items={item.items}\n                  />\n              ))}\n          </section>\n\n          <footer>\n            Projeto curso de estudo feito por min.\n            Direitos de imagens NexFlix\n            Dados pegos site Tmdb.org\n          </footer>\n\n          { moveList.length <= 0 && (\n              <div className='loading'>\n                <img src='https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/Netflix_LoadTime-scaled.gif' alt='carregando'/>\n            </div>\n          )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}