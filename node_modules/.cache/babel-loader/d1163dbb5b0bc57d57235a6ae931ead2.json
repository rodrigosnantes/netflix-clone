{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\DEV\\\\netflix-clone-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport TmdbApi from './api/TmdbApi';\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMove from \"./components/FeaturedMove\";\nimport Header from \"./components/Header\";\nimport './App.css';\nexport default function App() {\n  _s();\n\n  const [moveList, setMoveList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBackHeader] = useState(false); // useEffect(() => {\n  //     (async () => {\n  //         const resultMoveList = await loadAll();\n  //         setMoveList(resultMoveList);\n  //\n  //         const resultFeaturedMove = await randomFeatured(resultMoveList);\n  //\n  //         setFeaturedData(await getAdditionalMoveInfo(resultFeaturedMove));\n  //     })();\n  // }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 10) {\n        setBackHeader(true);\n      } else {\n        setBackHeader(false);\n      }\n    };\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    };\n  }, []);\n\n  const loadAll = async () => {\n    return await TmdbApi.getHomeList();\n  };\n\n  const randomFeatured = async list => {\n    const originals = list.filter(move => move.slug === 'originals');\n    const randomItem = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n    return originals[0].items.results[randomItem];\n  };\n\n  const getAdditionalMoveInfo = async move => {\n    return TmdbApi.getMoveInfo(move.id, 'tv');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      blackHeader: blackHeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), featuredData && /*#__PURE__*/_jsxDEV(FeaturedMove, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: moveList.map(item => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/Netflix_LoadTime-scaled.gif\",\n        alt: \"Carregando\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"i+s1TkHlnl/db7m/l8sJ2bkfRWE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/DEV/netflix-clone-main/src/App.js"],"names":["React","useEffect","useState","TmdbApi","MovieRow","FeaturedMove","Header","App","moveList","setMoveList","featuredData","setFeaturedData","blackHeader","setBackHeader","scrollListener","window","scrollY","addEventListener","removeEventListener","loadAll","getHomeList","randomFeatured","list","originals","filter","move","slug","randomItem","Math","floor","random","items","results","length","getAdditionalMoveInfo","getMoveInfo","id","map","item","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\n\r\nimport TmdbApi from './api/TmdbApi'\r\nimport MovieRow from \"./components/MovieRow\";\r\nimport FeaturedMove from \"./components/FeaturedMove\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport './App.css'\r\n\r\nexport default function App()  {\r\n    const [moveList, setMoveList] = useState([]);\r\n    const [featuredData, setFeaturedData] = useState(null);\r\n    const [blackHeader, setBackHeader] = useState(false);\r\n\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         const resultMoveList = await loadAll();\r\n    //         setMoveList(resultMoveList);\r\n    //\r\n    //         const resultFeaturedMove = await randomFeatured(resultMoveList);\r\n    //\r\n    //         setFeaturedData(await getAdditionalMoveInfo(resultFeaturedMove));\r\n    //     })();\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const scrollListener = () => {\r\n            if (window.scrollY > 10) {\r\n                setBackHeader(true);\r\n            } else {\r\n                setBackHeader(false);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', scrollListener);\r\n        return () => {\r\n            window.removeEventListener('scroll', scrollListener);\r\n        }\r\n    },[])\r\n\r\n    const loadAll = async () => {\r\n        return await TmdbApi.getHomeList();\r\n    }\r\n\r\n    const randomFeatured = async (list) => {\r\n        const originals = list.filter(move => move.slug === 'originals');\r\n        const randomItem = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n        return originals[0].items.results[randomItem];\r\n    }\r\n\r\n\r\n    const getAdditionalMoveInfo = async (move) => { return TmdbApi.getMoveInfo(move.id, 'tv') }\r\n\r\n    return (\r\n        <div className='pages'>\r\n\r\n            <Header blackHeader={blackHeader}/>\r\n\r\n          {featuredData &&\r\n            <FeaturedMove item={featuredData} />\r\n          }\r\n\r\n            <section className='lists'>\r\n              {moveList.map((item) => (\r\n                  <MovieRow\r\n                      key={item.title}\r\n                      title={item.title}\r\n                      items={item.items}\r\n                  />\r\n              ))}\r\n          </section>\r\n\r\n            <div className='loading'>\r\n                <img src='https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/Netflix_LoadTime-scaled.gif' alt='Carregando'/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}