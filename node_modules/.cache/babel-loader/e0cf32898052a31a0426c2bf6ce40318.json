{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nexfar/Desktop/Projetos Pessoais/netflix-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport TmdbApi from './api/TmdbApi';\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMove from \"./components/FeaturedMove\";\nimport './App.css';\nexport default function App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [moveList, setMoveList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const resultMoveList = await loadAll();\n      setMoveList(resultMoveList);\n      const resultFeaturedMove = await randomFeatured(resultMoveList);\n      setFeaturedData(resultFeaturedMove);\n      setLoading(false);\n    })();\n  }, []);\n\n  const loadAll = async () => {\n    return await TmdbApi.getHomeList();\n  };\n\n  const randomFeatured = async () => {\n    console.log(moveList.filter(move => move.slug === 'originals'));\n  };\n\n  if (loading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pages\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMove, {\n        item: featuredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), moveList.map(item => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BAIvy71DRSYl7zQvIgpyjGyOp8o=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nexfar/Desktop/Projetos Pessoais/netflix-clone/src/App.js"],"names":["React","useEffect","useState","TmdbApi","MovieRow","FeaturedMove","App","loading","setLoading","moveList","setMoveList","featuredData","setFeaturedData","resultMoveList","loadAll","resultFeaturedMove","randomFeatured","getHomeList","console","log","filter","move","slug","map","item","title","items"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,OAAO,WAAP;AAEA,eAAe,SAASC,GAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMY,cAAc,GAAG,MAAMC,OAAO,EAApC;AACAJ,MAAAA,WAAW,CAACG,cAAD,CAAX;AAED,YAAME,kBAAkB,GAAG,MAAMC,cAAc,CAACH,cAAD,CAA/C;AACCD,MAAAA,eAAe,CAACG,kBAAD,CAAf;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMM,OAAO,GAAG,YAAY;AACxB,WAAO,MAAMX,OAAO,CAACc,WAAR,EAAb;AACH,GAFD;;AAIA,QAAMD,cAAc,GAAG,YAAY;AAC/BE,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,WAAtC,CAAZ;AACH,GAFD;;AAKA,MAAIf,OAAJ,EAAa,OAAO,IAAP;AAEb,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA,iBAEKI,YAAY,iBACX,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cAHN,EAMKF,QAAQ,CAACc,GAAT,CAAcC,IAAD,iBACV,QAAC,QAAD;AAEI,QAAA,KAAK,EAAEA,IAAI,CAACC,KAFhB;AAGI,QAAA,KAAK,EAAED,IAAI,CAACE;AAHhB,SACSF,IAAI,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,cADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA7CuBnB,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport {useEffect, useState} from \"react\";\n\nimport TmdbApi from './api/TmdbApi'\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMove from \"./components/FeaturedMove\";\n\nimport './App.css'\n\nexport default function App()  {\n    const [loading, setLoading] = useState(true);\n    const [moveList, setMoveList] = useState([]);\n    const [featuredData, setFeaturedData] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n            const resultMoveList = await loadAll();\n            setMoveList(resultMoveList);\n\n           const resultFeaturedMove = await randomFeatured(resultMoveList);\n            setFeaturedData(resultFeaturedMove);\n            setLoading(false);\n        })();\n    }, [])\n\n    const loadAll = async () => {\n        return await TmdbApi.getHomeList();\n    }\n\n    const randomFeatured = async () => {\n        console.log(moveList.filter(move => move.slug === 'originals'))\n    }\n\n\n    if (loading) return null;\n\n    return (\n        <div className='pages'>\n          <section className='lists'>\n\n              {featuredData &&\n                <FeaturedMove item={featuredData} />\n              }\n\n              {moveList.map((item) => (\n                  <MovieRow\n                      key={item.title}\n                      title={item.title}\n                      items={item.items}\n                  />\n              ))}\n          </section>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}